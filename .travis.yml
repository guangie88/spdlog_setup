sudo: false
language: cpp

git:
  submodules: true

matrix:
  include:
    # ubuntu 14.04, gcc-4.9
    - env: ["VER=4.9"]
      compiler: gcc
      os: linux
      dist: trusty
      addons:
        apt:
          packages:
            - g++-4.9
            - doxygen
          sources:
            - ubuntu-toolchain-r-test

    # ubuntu 14.04, gcc-5
    - env: ["VER=5", "COV=YES", "EXT=YES"]
      compiler: gcc
      os: linux
      dist: trusty
      addons:
        apt:
          packages:
            - g++-5
            - doxygen
          sources:
            - ubuntu-toolchain-r-test

    # ubuntu 14.04, gcc-6
    - env: ["VER=6"]
      compiler: gcc
      os: linux
      dist: trusty
      addons:
        apt:
          packages:
            - g++-6
            - doxygen
          sources:
            - ubuntu-toolchain-r-test

    # ubuntu 14.04, gcc-7
    - env: ["VER=7"]
      compiler: gcc
      os: linux
      dist: trusty
      addons:
        apt:
          packages:
            - g++-7
            - doxygen
          sources:
            - ubuntu-toolchain-r-test

    # ubuntu 14.04, clang-3.4
    - env: ["VER=3.4"]
      compiler: clang
      os: linux
      dist: trusty
      addons:
        apt:
          packages:
            - clang-3.4
            - libc++-dev
            - doxygen
          sources:
            - sourceline: deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-3.4 main
              key_url: http://apt.llvm.org/llvm-snapshot.gpg.key

    # ubuntu 14.04, clang-3.5
    - env: ["VER=3.5"]
      compiler: clang
      os: linux
      dist: trusty
      addons:
        apt:
          packages:
            - clang-3.5
            - libc++-dev
            - doxygen
          sources:
            - sourceline: deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-3.5 main
              key_url: http://apt.llvm.org/llvm-snapshot.gpg.key

    # ubuntu 14.04, clang-3.6
    - env: ["VER=3.6"]
      compiler: clang
      os: linux
      dist: trusty
      addons:
        apt:
          packages:
            - clang-3.6
            - libc++-dev
            - doxygen
          sources:
            - sourceline: deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-3.6 main
              key_url: http://apt.llvm.org/llvm-snapshot.gpg.key

    # ubuntu 14.04, clang-3.7
    - env: ["VER=3.7"]
      compiler: clang
      os: linux
      dist: trusty
      addons:
        apt:
          packages:
            - clang-3.7
            - libc++-dev
            - doxygen
          sources:
            - sourceline: deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-3.7 main
              key_url: http://apt.llvm.org/llvm-snapshot.gpg.key

    # ubuntu 14.04, clang-3.8
    - env: ["VER=3.8"]
      compiler: clang
      os: linux
      dist: trusty
      addons:
        apt:
          packages:
            - clang-3.8
            - libc++-dev
            - doxygen
          sources:
            - sourceline: deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-3.8 main
              key_url: http://apt.llvm.org/llvm-snapshot.gpg.key

    # ubuntu 14.04, clang-3.9
    - env: ["VER=3.9"]
      compiler: clang
      os: linux
      dist: trusty
      addons:
        apt:
          packages:
            - clang-3.9
            - libc++-dev
            - doxygen
          sources:
            - sourceline: deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-3.9 main
              key_url: http://apt.llvm.org/llvm-snapshot.gpg.key

    # ubuntu 14.04, clang-4.0
    - env: ["VER=4.0"]
      compiler: clang
      os: linux
      dist: trusty
      addons:
        apt:
          packages:
            - clang-4.0
            - libc++-dev
            - doxygen
          sources:
            - sourceline: deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-4.0 main
              key_url: http://apt.llvm.org/llvm-snapshot.gpg.key

    # ubuntu 14.04, clang-5.0
    - env: ["VER=5.0"]
      compiler: clang
      os: linux
      dist: trusty
      addons:
        apt:
          packages:
            - clang-5.0
            - libc++-dev
            - doxygen
          sources:
            - sourceline: deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-5.0 main
              key_url: http://apt.llvm.org/llvm-snapshot.gpg.key

    # ubuntu 14.04, clang-6.0
    - env: ["VER=6.0"]
      compiler: clang
      os: linux
      dist: trusty
      addons:
        apt:
          packages:
            - clang-6.0
            - libc++-dev
            - doxygen
          sources:
            - ubuntu-toolchain-r-test
            - sourceline: deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-6.0 main
              key_url: http://apt.llvm.org/llvm-snapshot.gpg.key

install:
  # set the correct `CC` and `CXX` environment variables.
  - |
    if [ -n "${VER}" ]; then
      export CC="${CC}-${VER}"
      export CXX="${CXX}-${VER}"
    fi
  - ${CXX} --version
  # directory for dependency installation.
  - DEPS="${TRAVIS_BUILD_DIR}/deps"
  - mkdir -p ${DEPS}
  # install newer cmake.
  - |
    if [ "${TRAVIS_OS_NAME}" = "osx" ]; then
      brew update
      brew upgrade cmake
    elif [ "${TRAVIS_OS_NAME}" = "linux" ]; then
      travis_retry wget --no-check-certificate https://cmake.org/files/v3.8/cmake-3.8.2-Linux-x86_64.sh
      bash cmake-3.8.2-Linux-x86_64.sh --skip-license --prefix="${DEPS}"
      export PATH="${DEPS}/bin:${PATH}"
    fi

script:
  - git rev-parse HEAD
  - BUILDS=(Debug Release)
  - mkdir build
  - pushd build
  - |
    for BUILD in "${BUILDS[@]}"; do
      (
        set -x

        if [ "${COV}" = "YES" ] && [ "${BUILD}" = "Debug" ]; then
          cmake -DCMAKE_BUILD_TYPE="${BUILD}"              \
                -DCMAKE_INSTALL_PREFIX:PATH=install        \
                -DSPDLOG_SETUP_INCLUDE_UNIT_TESTS=ON       \
                -DSPDLOG_SETUP_INCLUDE_TEST_COVERAGE=ON ..
        elif [ "${EXT}" = "YES" ] && [ "${BUILD}" = "Debug" ]; then
          cmake -DCMAKE_BUILD_TYPE="${BUILD}"              \
                -DCMAKE_INSTALL_PREFIX:PATH=install        \
                -DSPDLOG_SETUP_INCLUDE_UNIT_TESTS=ON       \
                -DSPDLOG_SETUP_CPPTOML_EXTERNAL=ON ..
		else
          cmake -DCMAKE_BUILD_TYPE="${BUILD}"              \
                -DCMAKE_INSTALL_PREFIX:PATH=install        \
                -DSPDLOG_SETUP_INCLUDE_UNIT_TESTS=ON ..
        fi
      )

      cmake --build . --target install
      ctest -R spdlog_setup_unit_test -V
      ec=$?

      if [ "${COV}" = "YES" ] && [ "${BUILD}" = "Debug" ]; then
        gcov ./CMakeFiles/spdlog_setup_unit_test.dir/src/unit_test/unit_test.cpp.gcno
        ec=$?
        bash <(curl -s https://codecov.io/bash)
      fi

      (exit $ec)
    done
  - popd

# after_success:
  # generate document
  # - doxygen Doxyfile

branches:
  only:
    - master
